Changes

BASE

- all: added Line and Grid Screen Effects to Options > Frontend (not available on m17, gkdpixel, and trimuismart, too low res)
- all: added Cycle Effect to Options > Shortcuts
- all: added Save & Quit to Options > Shortcuts (thanks weakset)
- rg40xxh: revised brightness ramp to match other rg_xx devices
- rg_xx: updated SDL2 to reduce frame pacing issues
- rg_xx+rgb30: reduced frequency and severity of audio underruns
- tg5040: added support for 20240413 recovery firmware

EXTRAS

- rg_xx: added Apply Panel Fix.pak to reduce frame pacing issues
- tg5040: updated Pokémon mini defaults
- tg5040: added Remove Loading.pak (see EXTRAS README)

For pak devs:

- all: added syncsettings.elf to enforce MinUI brightness and volume to third-party apps (see PAKS.md)

---

BUGS

- 

next
	clean out this rat nest of a todo doc

	h700
		implement cpu speed (or figure out why it wasn't already implemented)
		

	modded kernels for 40xxH and 35xxH
		https://github.com/TheGammaSqueeze/40xx-kernel-decomp/releases
	
	finish implementing screen_effect
		unsupported devices need a way to hide the Cycle Effect shortcut...
		try
			if dst_w != src_w * scale stretch the effect?
		issues
			weird screen rotation/black screens when cycling through effects on 282
			random crashes/black screens when cycling through effects on tg5040
		implement
			copy my282 implementation to other sdl2 platforms
				triple check on devices with rotated screens
				+ rg35xxplus
				+ rgb30
				+ tg5040
				+ v10
				x m17 (too low res)
			copy rg35xx implementation to other sdl1.2 platforms
				does cycling effects still not work correctly?
				+ miyoomini
				+ rg35xx
				x gkdpixel (too low res)
				x trimuismart (too low res)
			or move updateEffect() to GFX?
		aspect/fullscreen scales are broken because of overscaling
			maybe disable on non-native scales?
			did legacy MinUI hide the option on non-native scales?
				it didn't hide but it's just not available
				maybe for initial release?
				
				
	my282: add an updater script that automatically detects old versions of Bootlogo and Remove Loading paks and deletes them?

	patch all versions of pcsx and picodrive
		https://github.com/shauninman/MinUI/pull/14/files#diff-d76fedd6d41fe8dd9c6a7b6066bdb39e783e6c21af2fde85415dc83d88f984df
		related https://discord.com/channels/741895796315914271/1232969624417730630/1263579750409179271
	
	emu pak detection isn't working when two folders are combined
		eg. SFC and SUPA folder but no SUPA.pak still shows games from SUPA
	switch rgxx-line to /bin/bash to use &> instead of the grody construction I can never remember the syntax for
		it works!
	all
		look into how many cores support 8888
			this might be a bottleneck (if it's having to go 8888 to 565 and back to 8888 for every pixel, every frame)
			not a single BASE or EXTRA core requests 8888, so that won't help even if it is a bottleneck
			
		Thread Core
			needs changes to support systems that change resolution (eg. PS)
			doesn't seem to have any affect on a30 (mostly because the problems are hi res games and the copy from cpu to gpu)
			disable and remove this feature entirely?

		revisit bub181's core # vs freq ideas for other devices
		
		look into RETRO_ENVIRONMENT_GET_CURRENT_SOFTWARE_FRAMEBUFFER for zero copy framebuffer
			not sure it's really a zero copy because LockTexture has to copy the texture from the gpu to the cpu...
			
			times on a30's SDL
				GB: SDL_UnlockTexture blocked for 3ms (160,144) (TLOZ:LA)
				PS: SDL_UnlockTexture blocked for 5ms (368,480) (TEKKEN3)
				PS: SDL_UnlockTexture blocked for 8ms (512,480) (BR2)
				PS: SDL_UnlockTexture blocked for 11ms (640,480) (CMR2)
				try using SDL_UpdateTexture instead of Lock/Unlock
					might be saving 1-2ms
		
		update all cores
			call out breaking changes (gpsp save states) in release notes 
		add Clear Recently Played.pak, copy to all platforms
			maybe include confirmation?
			requires show.elf
		enable SELECT/START+L/R for volume/brightness
		limit option name replacements based on core lib name
		noui
			quit doesn't work as expected on trimuismart
			possibly because of absense of shutdown?
	h700
		hijack boot earlier?
			hangs boot
			reflashing a fresh stock image takes too long to happily trial and error this
			was able to "takeover" /etc/init.d/launcher.sh and inject it into systemd's basic.target
				but it didn't improve boot time
		look into using fbdev directly
			I was able to get this working
				SDL_NOMOUSE=1 required for SDL1.2 to work
				WAITFORVSYNC doesn't appear to work
				more notes in separate 28xx/notes.txt
		
		muos uses sdl 1.2 fbdev_mali+alsa for retroarch...which what
			refried beans uses SDL2
			no underruns in fceumm without threaded video...even with the sdl2 instead of default gl driver...
			i tried copying muos libsdl2 to minui but I think I grabbed the 64bit version, is there a 32 bit version?
				yes but it's built with a newer version of glibc than stock
				so I'm back to having to build my own rootfs
				or building sdl2 from muos with my toolchain
		stock uses sdl2 fbdev_mali+alsa for retroarch
			stock retroarch has frame pacing issues in AoS/gpsp 
				without threaded video
				fceumm has underruns without threaded video
		minarch has the same issues on refried muos
			needs modified lib path (because muos is 64bit by default)
				export LD_LIBRARY_PATH=$SYSTEM_PATH/lib:/usr/lib32
				might have also had to hide MinUI's libSDL*
				SDL_BLITTER_DISABLED=1 has no effect on underruns
		
		diff older version of stock that doesn't underrun so bad
			compare with rg35xxplus (I don't remember having audio issues there)
		the problem is the panel is being driven at 59fps
			nope, fixed that with boot_package dtb patch and it still underruns
				wtf
			two things mitigate the effect of the problem
				change SAMPLES to 400
					makes underruns much less frequent and much smaller
					because fceumm fills the buffer ~799 samples at a time
					works
					also bumped buffer to 8 seconds then reverted to original 5 seconds
						see if improved underruns persists without or if that a component of the fix 
				instead of zero filling on underrun fill with last frame values
					makes the more regular 1-2 sample underruns almost unnoticeable
			
			is the batching logic responsible for lag somehow?
				there's an SDL_Delay and a loop
				but doubling BATCH_SIZE and switching to usleep(500)
					didn't seem to help
					SDL_Delay(1) actually delays for 1ms on this chip
			tried renicing to -20, no help
			played with taskset to no help
			gba AoS judder persists even if audio is silenced
			GFX_Flip blocks on tg5040 too, so many red herrings
			I disabled audio entirely (didn't even initialize it) and the judder persisted
			there's something rotten inside SDL_RenderPresent()
				retry compiling sdl2
					figure out where SDL2-2.30.4 with mali came from (knulli? rocknix?)
					no good, this one works https://github.com/JohnnyonFlame/SDL-malifbdev-rot
						solves judder
		
		rebuild using opengl?
			based on steward-fu's work
				https://steward-fu.github.io/website/handheld/rg28xx_cpp_es_triangle.htm
				https://steward-fu.github.io/website/handheld/rg28xx_cpp_es_texture.htm
			
			# add stock libs and includes to toolchain
			# what was sysroot.tar.gz created from? just /usr on the device? probably
			
				tar -czf sysroot.tar.gz /usr/include /usr/lib /usr/lib32
				
			# will convert to xz in docker
				
			mv sysroot.tar.gz /opt
			cd /opt
			mkdir h700
			tar -xvzf sysroot.tar.gz -C h700
			rm sysroot.tar.gz
			rsync -a --ignore-existing /opt/h700/ /opt/rg35xxplus-toolchain/usr/arm-buildroot-linux-gnueabihf/sysroot/

			# build flags
			-lGLESv2 -lEGL -lmali -ldl
		
		tried building sdl2 myself it crashed and burned spectacularly
		tried using taskset to bump priority but it already appears maxed
		
		

	/tmp/noui
		show poweroff on quit in minarch if present
		tricky because of thread core option...

	pretty sure nothing uses the various platform.h BUTTON_* macros (because SDLK_* mappings are so spotty on these devices)
		pretty sure they all use CODE_* or JOY_* now

	macos (for modern compiler and debugging tools, not for release!)
		minarch
	
	rg35xxplus/h
		figure out
			audio crackle on quit sdl
				setting raw volume to 0 doesn't fix
			implement jack
				sysfs state doesn't update
			check hdmi
				nothing
				/dev/hdmi?

	unzip60
		rename Makefile.trimuismartpro to just Makefile.minui?
	gkdpixel
		usb mode
			rndis? related? /etc/default/configfs
		bootlogo?
			haven't located on disk or in memory
		figure out dual sdcard support for mini?
		non-plus snes9x2005 for perf?
		codify alt paks to use stock standalone emus in MinUI
		light bleed
			experiement with /sys/devices/platform/jz-pwm-dev.0/jz-pwm/pwm0/period
				default is 10000
				nothing
		graphics
			jitter while scrolling
			but only on randon launches
			othertimes it's perfectly smooth (same core, same game)
		subpixel scaler work underway
				gb/gbc
				gba
				nes/snes
	
	native Files.pak
		I might just need to accept some duplication with MinUI (eg. Array and Directory/Entry arrays)
	m17
		still haven't found way to disable volume controls
			I think it's controlled by /usr/bin/gpio-volctrl.sh
			but rootfs is a 500MB ro squashfs so patching isn't really ideal
	all
		investigate Clock.pak issues (timezone related primarily)
		evtest
			random note: doesn't know about /dev/input/js0?
		standarize /bin/shutdown
			while (1) pause(); prevents shutdown on some platforms
			just system("rm /tmp/minui_exec") and exit(0) ?
		.res
			use standard naming (replace ext with png instead of append png)
		better document the new Bootlogo.paks
		
		collections can't handle accented characters (eg. é) in path/rom name...
			wait, why can recents.txt but not collections.txt?
			because one is written by the device so its using device native accented chars
		update stored rom path logic to only require TAG and not full folder name? (would simplify Collection authoring?)
		add make fetch to get all external sources before build?
		add Developer.pak
			only for devices with adb or ssh
			
		rewrite Shortcuts section of readme by device not the tangle mess it currently is
			maybe do the same for all?
			break out platforms into completely separate installers/updaters?
				will require revisiting unzipping system
				will need to inject not replace
					but then how to handle removing deleted files?
		look into mednafen/beetle ngp core (neopop?)
			beetle-ngp-libretro
			this ran at about 1 frame per 10 seconds...on rgb30
			add logging
		wonderswan
			runs at 1fps
			possibly because minarch forces 60fps but this handheld runs at 75?
			
		draw debug to core framebufer before scaling
			using pixel instead of default font so it will fit on things like PKM and GB*
		
	tg5040
		create PSP.pak and NDS.pak and document how to setup by copying assets from stock?
			
		can't detect headphone state at boot?
		wifi
			Splore.pak can pull updated lists from bbs but cannot download carts
				no idea why
				wget works on stock so I'm failing to initiaize the network properly
					this gets ping working: udhcpc -i wlan0
					but wget is not compiled with ssl support
					the following did not work to enable opkg to install/update wget
					
						echo "src/gz openwrt_core_cortexa53 http://downloads.openwrt.org/snapshots/packages/aarch64_cortex-a53/packages" > /etc/opkg/customfeeds.conf
						echo "src/gz openwrt_core_sunxi http://downloads.openwrt.org/snapshots/targets/sunxi/cortexa53/packages" >> /etc/opkg/customfeeds.conf
						
						no valid architecture
					just remap wget calls to curl (which has ssl support)
			need to patch pico8_64
			
				xxd old > old.hex
				xxd new > new.hex
				diff -u old.hex new.hex > pico8_64.patch
						
		n64
			requires libretro opengl implementation
		psp
			after adding xrgb8888 support to MinUI it still chokes on a number of missing libraries 
			and eventually an unlinked function (something like XUnlockMutex)
		
	user reported
		random reports of minui not booting reliably 
			first smart
				can't reproduce
				already waits 3 seconds
			then rgb30
				related to orphaned clusters issue? likely
				if so it needs to either be solved in MOSS/JELOS (RIP)
				or the other platforms MinUI supports (the non-Plus Mini in particular has a really terrible shutdown process at least on older firmwares)
		
	move PLAT_isOnline() into PWR_* formally
			
	all
		revisit localization?
	
	minarch:
		crop save state pillar/letter-boxing?
		force aspect over hdmi? (or at least disable cropped?)
	
	rgb30
		does jack detection work?
		could wifi support more than one access point?
			an additional two lines for each AP?
			then try them in order?
			
		volume buttons sometimes get stuck
			haven't figured out how to reproduce reliably but I've had it happen kinda frequently
			just experienced on the smart so it's probably something in keymon
		figure out why power suspends the device after MOSS install
			it appears to reboot but it only stops suspending after a manual reboot
			fewt has a fix?
				https://github.com/JustEnoughLinuxOS/distribution/pull/2195/files#diff-719d790f2d3c1d5a0884ae9eb69fb77956fcaaae235282acb6e6817339f35105

	moss
		build lib32 to try to fix snes9x save state compatibility
			first attempt did not go well :sweat_smile:
		
	trimui: scaling (see DE test)
		
known issues
	all: race core (NGP/C.pak) doesn't restore audio state correctly
	rgb30: light crackling in some cores (eg. fceumm and snes9x2005_plus)
	trimui: hw scaling isn't implemented yet
	nano: says it can bind MENU+button for shortcuts, it can't

all
	minarch
		GFX_blitMessage() screen w/h is 0,0 for some reason
		prevent MENU+button from triggering button
		prevent binding same MENU+button to control and shortcut at same time
			reset the newer input to None and show a message, ideal something like:
				MENU+<button> is already bound to (<name> shortcut|<name> control)
	clock
		factor in timezone offset?
	simple progress animation for installing/updating
		launch as a daemon with &
		draws in a corner
		kill after install/update complete
		if it's circular we don't even need to worry about rotation :sweat_smile:
	main makefile
		targets have too many dependencies
		getting a little better
	cores
		add optional per core patch folder
			currently looks for a global one in all/cores
		move all the CORE_* vars up to all/cores (since they ended up all being the same)
		there has got to be a better way to main these patches
			updating fake-08 was so much copy/pasting
	minui
		alt tag is getting truncated, should be added after truncation
	add a "res" (or "many"?) folder 
		for install/update and charging gfx?
	show
	say
	confirm

smart
	cores
		supa starfox perf bad

miyoomini
	separate settings file for mini and plus?
	battery overlay

miniplus
	-
	
rg35xx
	revisit hdmi based on rgb30 implementation?
	overclock.elf with userspace versus performance
		performance should be slower because it will max out to the max defined scaling frequency
		userspace should accept the specific scaling frequency
		re: NDS.pak
		
		XQuader figured out that CPUs are unlocked with performance but not userspace
			the following will unlock them:
				echo 0xf > /sys/devices/system/cpu/autoplug/plug_mask
				echo 1 > /sys/devices/system/cpu/cpu1/online
				echo 1 > /sys/devices/system/cpu/cpu2/online
				echo 1 > /sys/devices/system/cpu/cpu3/online
			but using performance instead of userspace has the same result so maybe just use that
				as long as it doesn't kill battery life?
			turns oout this was discovered back in may by another user:
				https://www.reddit.com/r/RG35XX/comments/13rtrqb/minuis_snes_performance/
				https://github.com/shauninman/MinUI-Legacy-RG35XX/compare/main...zoli0726:union-minui:main
				seems like this is sufficient to unlock the improved performance
					echo 0xF > /sys/devices/system/cpu/autoplug/plug_mask
					though I'm not sure I'm observing a difference...(at least when applying over adb)
		
	charging screen isn't working for someone on RH discord
		charging.png isn't being copied to MISC during install (it should only be omitted during update)
	how to handle updating on mini and missing TF1 updates as a result?
		could I write the version to the .minstalled file
		if it doesn't match the current one run the installer
		trimui smart has a similar issue now
			the bootstrap folder updates /etc/main

trimui
	overclock
		crashy
	scaling
	overlay
	create core patches
	
	cores
		picodrive
			doesn't recover from quicksave reliably...
		snes9x2005_plus 
			no sound
		snes9x2005
			only running at ~45fps
			frameskip of 1 is probably necessary but 2005 doesn't have that option
			will need to patch
		gpsp
			ffiv requires manual frameskip of 1 to not chug on mode7-like bits

	
rg35xx/install and miyoomini/install have png/bmp versions of the same files
	as do miyoomini/dat/ and rg35xx/ramdisk/

---

FIXME: main makefile is a brittle mess
	each platform has its own default cores and extras
	so it's a tangle

---

1. makefile routes requests through makefile.toolchain
2. which clones the toolchain repo if necessary and
3. spins up a docker to run workspace/makefile build for each/the target platform
4. which builds commone elfs and punts to workspace/PLATFORM/makefile
5. which builds unique platform elfs

there's more to this now (eg. PLATFORM/makefile.copy)

---

replace 
	git clone repo && cd repo && git checkout branch 
with
	git clone --depth 1 --branch branch repo
note: doesn't work with commits only branches

---

https://discord.com/invite/p4uRmCd